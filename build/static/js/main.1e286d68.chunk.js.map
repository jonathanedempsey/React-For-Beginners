{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","console","log","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.1e286d68.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Fragment } from 'react';\r\nimport { getFunName } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n\r\n    // Validation\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    };\r\n\r\n    // Option 1 : Since goToStore isn't bound in React by default (because it's custom made by us),\r\n    // we need to bind it so 'this' will work in our StorePicker class\r\n    // constructor() {\r\n    //     super();\r\n    //     console.log(\"Run\");\r\n    //     this.goToStore = this.goToStore.bind(this);\r\n    // }\r\n    // goToStore(event) {\r\n    //     code here..\r\n    // }\r\n\r\n\r\n    // Option 2: the arrow function will be bound to the instance automatically so it's\r\n    // which also allows us to use 'this'. Much cleaner than option 1\r\n    goToStore = (event) => {\r\n        // 1. Stop form from submitting\r\n        event.preventDefault();\r\n\r\n        // 2. Get text from input\r\n        const storeName = this.myInput.current.value;\r\n        console.log(storeName);\r\n\r\n        // 3. Change the page to /store/what-ever-they-enetered\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                { /* goToStore - we dont include () because we dont want it to run on page load */ }\r\n                { /* getFunName() - we include () because we DO want it to run on page load */ }\r\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                    <h2>Please Enter A Store</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        ref={this.myInput}\r\n                        required\r\n                        placeholder=\"Store Name\"\r\n                        defaultValue={getFunName()}\r\n                    />\r\n                    <button type=\"submit\">Visit Store</button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ tagline }) => (\r\n    <header className=\"top\">\r\n        <h1>\r\n            Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">The</span>\r\n            </span>\r\n            Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\n// prop validation\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Order extends React.Component {\r\n    // Validation\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key: key,\r\n            timeout: { enter:500, exit:500 }\r\n        };\r\n\r\n        // Make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition\r\n                                classNames=\"count\"\r\n                                key={count}\r\n                                timeout={{ enter:500, exit:500 }}\r\n                            >\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n\r\n                        </TransitionGroup>\r\n\r\n                        lbs {fish.name}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick={ () => this.props.removeFromOrder(key) }>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n\r\n            // If the fish is available, perform the total calculation,\r\n            // else, return the unmutated total\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    // Validation\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = event => {\r\n        // 1.  stop the form from submitting\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this.props.addFish(fish);\r\n        // refresh the form\r\n        event.currentTarget.reset();\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"type\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"type\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh</option>\r\n                    <option value=\"unavailable\">Sold Out</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"type\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n    // Validation\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        // console.log(event.currentTarget.name); // eg name=\"price\"\r\n        // update that fish\r\n        // 1. Take a copy of the current fish\r\n        // Dynamically choose the current property to change\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        // console.log(updateFish);\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\">Fresh</option>\r\n                    <option value=\"unavailable\">Sold Out</option>\r\n                </select>\r\n                <textarea type=\"text\" name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={ () => this.props.deleteFish(this.props.index) }>Remove Fish</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\r\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In With Twitter</button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyC7KyIqqbmwF5zqiW_Rp5zalJDEykftmOQ\",\r\n    authDomain: \"catch-of-the-day-jd-299a7.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-jd-299a7.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\n\r\n\r\nclass Inventory extends React.Component {\r\n    // Validation\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    // On page load, set owner and uid to null\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    // Each time we load the page, check if the user was already logged in.\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            // If they are, pass the user to our authHandler which checks if they're the owner\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        // console.log(authData);\r\n        // 1. Look up current store in the firebase database\r\n        // fetch() will return a promise. Put await in front of it to get the store name variable instead\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        // console.log(store);\r\n\r\n        //2. Claim it if there is no owner\r\n        if(!store.owner) {\r\n            // Save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n\r\n        // 3. Set the state of inventory component to reflect the current user\r\n        // Find the current logged in user and find the store owner, if the same user allow access to Inventory\r\n        // Otherwise give user error saying they aren't the store owner\r\n        this.setState({\r\n            uid:authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n\r\n    }\r\n\r\n    authenticate = provider => {\r\n        // Dynimcally look up function name of clicked provider\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        // Wait for user to be logged out of firebase first\r\n        await firebase.auth().signOut();\r\n\r\n        // Then clear user ID from state\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Logout</button>\r\n\r\n        // 1. Check if user is logged in\r\n        if(!this.state.uid) {\r\n            // If not logged in, load login buttons\r\n            return <Login authenticate={this.authenticate} />\r\n        }\r\n\r\n        // 2. Check if they are not the store owner\r\n        if(this.state.uid !== this.state.owner) {\r\n            // If the state user ID and Store owner ID dont match, print error\r\n            return (\r\n                <div>\r\n                    <p>Sorry, you are not the owner</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // 3. No objections, they must be the owner. Just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                    <EditFishForm\r\n                        key={key}\r\n                        index={key}\r\n                        fish={this.props.fishes[key]}\r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish} />\r\n                ))}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n    // If we're in a class we use static!\r\n    // Use shape() for validating obejcts\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n\r\n    handleClick = () => {\r\n        // Run addToOrder with current fish's key\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available'; // Boolean\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">{name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? \"Add To Order\" : \"Sold Out!\"}</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from '../base';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends React.Component {\r\n    // Set empty state on App load\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    // Validation\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    // Executes after component is fully rendered\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n\r\n        // First reinstate our local storage.\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n\r\n        // If a local storage value existed, then reinstate it\r\n        if(localStorageRef) {\r\n            // String to Object\r\n            this.setState({ order: JSON.parse(localStorageRef) });\r\n        }\r\n\r\n        // Sync fishes with this specific store name\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: \"fishes\"\r\n        });\r\n    }\r\n\r\n    // Trigger when order is added.\r\n    // Store the user's order in local storage\r\n    componentDidUpdate() {\r\n        console.log(this.state.order);\r\n        // Object to String\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    // Memory leak fix!\r\n    // Stop listening for changes if the app is exited\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n\r\n\r\n    addFish = (fish) => {\r\n        console.log(\"Adding a fish!\");\r\n        // Need to use existing State functionality in React or won't work\r\n        // 1. Take copy of existing state. We never want to reach in to state and modify it directly (Mutation)\r\n        const fishes = { ...this.state.fishes }; // Object spread\r\n\r\n        // 2. Add new fish to that fishes variable\r\n        // Rather than use imcrementing numbers for unique IDs, use the time by milliseconds\r\n        fishes[`fish${Date.now()}`] = fish;\r\n\r\n        // 3. Set the new fishes object to state\r\n        this.setState({\r\n            // If property and value are the same we can just type it out once\r\n            // fishes: fishes\r\n            fishes\r\n        });\r\n    }\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // 1. Take copy of current state\r\n        const fishes = { ...this.state.fishes };\r\n\r\n        // 2. Update that state\r\n        fishes[key] = updatedFish;\r\n\r\n        // 3. Set that to state\r\n        this.setState({ fishes }); // or fishes: fishes\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        // 1. Take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n\r\n        // 2. Update state\r\n        // equal to null if deleting from Firebase\r\n        fishes[key] = null;\r\n\r\n        // 3. Set that to state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        });\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n\r\n        //Either add to order or update number of order\r\n        order[key] = order[key] + 1 || 1;\r\n\r\n        // Call setState to update our state object\r\n        this.setState({ order }); // order:order\r\n    }\r\n\r\n    removeFromOrder = (key) => {\r\n        // Take a copy of state\r\n        const order = { ...this.state.order };\r\n\r\n        // Remove that item from order\r\n        // Since we're not removing from Firebase, we can use 'delete' instead of null\r\n        delete order[key];\r\n\r\n        // Call setState to update our state object\r\n        this.setState({ order }); // order:order\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        { /* Map over all our fishes in state with a unique key for each */ }\r\n                        {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} /> )}\r\n                    </ul>\r\n                </div>\r\n                <Order\r\n                    fishes={this.state.fishes}\r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory\r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {/* When the extact path matches /, use component StorePicker */}\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n\r\n            {/* When the extact path matches /store/123, use component App */}\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n\r\n            {/* Else load our Not Found compoenent */}\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}